<%@ CodeTemplate Language="C#" TargetLanguage="CFC" Debug="False" Description="Template description here." %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="Context" Description="Table that the object is based on." %>
<%@ Map Name="CSharpAlias" Src="System-CSharpAlias" Description="System to C# Type Map" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="System.Design" %>
<%@ Import Namespace="SchemaExplorer" %>
<script runat="template">
	<!-- #include file="../scripts/cfcInitDefault.cs" -->
	<!-- #include file="../scripts/Required.cs" -->
	<!-- #include file="../scripts/CFType.cs" -->
	<!-- #include file="../scripts/CFTabs.cs" -->
	<!-- #include file="../scripts/SQLType.cs" -->
	public override string GetFileName() {
		if (SourceTable.Name.Length > 3 && SourceTable.Name.Substring(0, 3) == "tbl") 
			return SourceTable.Name.Substring(3) + ".cfc";
		else
			return SourceTable.Name + ".cfc";
	}
</script>
<% 
bool fAccountID = false;
bool fClubID = false;
bool fdFlag 	= false;
bool fIsActive 	= false;
bool fOrgYear 	= false;
bool fSequence 	= false;
bool fPositionSort 	= false;
string strSourceTable = SourceTable.Name;
if (strSourceTable.Length > 3 && strSourceTable.Substring(0, 3) == "tbl") { 
	 strSourceTable = strSourceTable.Substring(3);
}
if (strSourceTable.Length > 7 && strSourceTable.Substring(0, 7) == "tblUser") { 
	 strSourceTable = "Member";
}
if (strSourceTable.Length > 3 && strSourceTable.Substring(0, 3) == "RLI") { 
	 strSourceTable = strSourceTable.Substring(3);
} 
if ( strSourceTable == "User") { strSourceTable = "Member";}

int col = 0;
foreach (ColumnSchema column in this.SourceTable.Columns) {  
	if (column.Name == "AccountID") { 
		fAccountID = true;
	}
	if (column.Name == "ClubID") { 
		fClubID = true;
	}
	if (column.Name == "dFlag") { 
		fdFlag = true;
	} 
	if (column.Name == "IsActive") { 
		fIsActive = true;
	} 
	if (column.Name == "OrgYear") { 
		fOrgYear = true;
	} 
	if (column.Name == "PositionSort") { 
		fPositionSort = true;
	} 
	if (column.Name == "Sequence") { 
		fSequence = true;
	} 
} 
%>
<!--------------------------------------------------------------------------------------------
	<%= strSourceTable %>DAO.cfc

	Modifications
		$Date: <%= DateTime.Now.ToShortDateString() %> $
---------------------------------------------------------------------------------------------->

	<cffunction	name="<%= strSourceTable %>"
		access="REMOTE"
		description="<%= strSourceTable %> Get"
		consumes="text/plain"
		produces="application/json"
		returnType="String"
		returnFormat="JSON"
		restPath="/"
		httpmethod="GET">

		<cfargument name="<% =SourceTable.Columns[0].Name %>"		required="FALSE"	type="<%= CFType(SourceTable.Columns[0]) %>"	restArgSource="QUERY"	default="0	Hint="<% =SourceTable.Columns[0].Name %>"/>
		<cfargument name="Filter"		required="FALSE"	type="String"				restArgSource="QUERY"	default="0	Hint="Filter"/>

		<cftry>
			<!--- ---------------------------------------------------------------------------
				 Get the API key from the request header
			---------------------------------------------------------------------------- --->
			<cftry>
				<cfset api_key = GetHttpRequestData().Headers["x-apim-api-key"]>
				<cfcatch>
					<cfset response.status = false />
					<cfset response.message = "API Key Missing" />
					<cfreturn SerializeJSON(response) />
				</cfcatch>
			</cftry>

			<!--- ---------------------------------------------------------------------------
				 Lookup the account, club and active flag for this API key
			---------------------------------------------------------------------------- --->
			<cfinvoke component="\#APPLICATION.DIR#\CFC\APIKeyDAO"	method="Get"	APIKey="#api_key#" returnVariable="KeyInfo" />
			<!--- Get the account and club from the database for this API key --->
			<cfset AccountID    = KeyInfo.Account />
			<cfset ClubID       = KeyInfo.Club />

			<cfset logObj = CreateObject("component", "\#APPLICATION.DIR#\CFC\Utilities") />
			<cfset log = logObj.XLog(Table="<%= strSourceTable %>", type="A", Value="#ARGUMENTS.EngagementID#", Desc="Get D-#AccountID# C-#ClubID#")>

			<!--- ---------------------------------------------------------------------------
				Does the FILTER contain other search parameters?  ADJUST or REMOVE
			---------------------------------------------------------------------------- --->
			<!--- Default Filter is <% =SourceTable.Columns[0].Name %> - See if there is a complete JSON String --->
			<cfset thisParm = StructNew() />
			<cfif IsJSON(ARGUMENTS.filter)>
				<cfset thisParm = deSerializeJSON(ARGUMENTS.filter)>
				<cfparam name="thisParm.<% =SourceTable.Columns[0].Name %>" 	default="">			<!--- Blank will default to Active --->
				<cfparam name="thisParm.Filter" 	    default="">
				<cfparam name="thisParm.SortBy" 	    default="UserName">
			<cfelse>
				<cfset thisParm.<% =SourceTable.Columns[0].Name %> = ARGUMENTS.Filter>
				<cfset thisParm.Filter = "">
				<cfset thisParm.SortBy = "UserName">
			</cfif>

			<!--- ---------------------------------------------------------------------------
				Do All the Core Method Work Here
			---------------------------------------------------------------------------- --->
			<cfset this<%= strSourceTable %>	= StructNew() />
			<cfset <%= strSourceTable %>		= arrayNew(1) />

			<cfinvoke component="\#APPLICATION.DIR#CFC\<%= strSourceTable %>DAO"	method="List" returnvariable="Q">
				<cfinvokeargument name="AccountID"			Value="#AccountID#">
				<cfif ListLen(Trim(ARGUMENTS.ClubIDs)) GT 0>
					<cfinvokeargument name="ClubIDs"			Value="#ARGUMENTS.ClubIDs#">
				<cfelse>
					<cfinvokeargument name="ClubID"				Value="#ClubID#">
				</cfif>
				<cfinvokeargument name="Filter"				Value="#thisParm.Filter#">
				<cfinvokeargument name="SortBy"				Value="#thisParm.SortBy#">
			</cfinvoke>

			<cfloop query="Q" >
				<% foreach (ColumnSchema column in this.SourceTable.Columns) {  %>
				<cfset this<%= strSourceTable %>.<%= column.Name %><%= CFTabName( column.Name ) %>= <%= column.Name %> />
				<% } %>
				<cfset arrayAppend(<%= strSourceTable %>s, duplicate(this<%= strSourceTable %>)) />
			</cfloop>

			<!--- Return the JSON encoded result --->
			<cfreturn SerializeJSON(<%= strSourceTable %>s)>

			<!--- ---------------------------------------------------------------------------
				Return ERROR from cfcatch
			---------------------------------------------------------------------------- --->
			<cfcatch>
				<cfset response.message = CFCATCH.Message />
				<cfset response.detail  = CFCATCH.Detail />
				 <cfreturn SerializeJSON(response) />
			</cfcatch>
		</cftry>
	</cffunction>

	<cffunction	name="<%= strSourceTable %>"
		access="REMOTE"
		description="<%= strSourceTable %> Save"
		consumes="text/plain"
		produces="application/json"
		returnType="String"
		returnFormat="JSON"
		restPath="/"
		httpmethod="POST">

	<% foreach (ColumnSchema column in this.SourceTable.Columns) {  %>
		<% if ( column.ExtendedProperties.Contains("CS_IsComputed") && column.ExtendedProperties["CS_IsComputed"].Value.ToString().ToLower() == "true") continue;  %>
		<% if (column.Name == "AccountID") continue; %>
		<% if (column.Name == "ClubID") continue; %>
		<% if (column.Name == "dFlag") continue; %>
		<% if (column.Name == "Modified_By") continue; %>
		<% if (column.Name == "Modified_Tmstmp") continue; %>
		<% if (column.Name == "Created_By") continue; %>
		<% if (column.Name == "Created_Tmstmp") continue; %>
		<% if (column.Name == "UUID"				 || column.Name == "CRMViewDate"				 || column.Name == "CRMStatusID" 				|| column.Name == "CRMTracking" 				 || column.Name == "RIUpdate" 				  || column.Name == "RIUpdateDate" 				   || column.Name == "VerifiedDate" 				 || column.Name == "VerifiedBy"					|| column.Name == "VerifiedBy" || column.Name == "InfoVerified" || column.Name == "Website" || column.Name == "Expertise"  || column.Name == "YPPApplied" || column.Name == "YPPGoodUntil" || column.Name == "TollFreeNumber") { %>
			<% continue; %>
		<% } %>
		<cfargument name="<%= column.Name %>"<%= CFTabName( column.Name ) %>required="FALSE"	type="<%= CFType(column) %>"	restArgSource="QUERY"	default="<%= cfcInitDefault(column) %>	Hint="<%= column.Name %>"/>
	<% } %>

		<cftry>
			<!--- ---------------------------------------------------------------------------
				 Get the API key from the request header
			---------------------------------------------------------------------------- --->
			<cftry>
				<cfset api_key = GetHttpRequestData().Headers["x-apim-api-key"]>
				<cfcatch>
					<cfset response.status = false />
					<cfset response.message = "API Key Missing" />
					<cfreturn SerializeJSON(response) />
				</cfcatch>
			</cftry>

			<!--- ---------------------------------------------------------------------------
				 Lookup the account, club and active flag for this API key
			---------------------------------------------------------------------------- --->
			<cfinvoke component="\#APPLICATION.DIR#\CFC\APIKeyDAO"	method="Get"	APIKey="#api_key#" returnVariable="KeyInfo" />
			<!--- Get the account and club from the database for this API key --->
			<cfset AccountID    = KeyInfo.Account />
			<cfset ClubID       = KeyInfo.Club />

			<cfset logObj = CreateObject("component", "\#APPLICATION.DIR#\CFC\Utilities") />
			<cfset log = logObj.XLog(Table="<%= strSourceTable %>", type="A", Value="#ARGUMENTS.EngagementID#", Desc="POST D-#AccountID# C-#ClubID#")>

			<!--- ---------------------------------------------------------------------------
				Do All the Core Method Work Here
			---------------------------------------------------------------------------- --->
			<cfset <%=strSourceTable %>Obj = createObject("component", "\CFC\<%=strSourceTable %>").init( <%= SourceTable.Columns[0].Name %>="#<%= SourceTable.Columns[0].Name %>#" ) />
			<cfinvoke component="\CFC\<%=strSourceTable %>DAO" method="Read" <%=strSourceTable %>="#<%=strSourceTable %>Obj#" returnvariable="<%=strSourceTable %>">

			<!--- Update the <%=strSourceTable %> with changes from the FORM --->
			<cfinvoke component="\CFC\<%=strSourceTable %>" method="init" ArgumentCollection="#FORM#"  returnvariable="<%=strSourceTable %>Obj" /> 
			<cfinvoke component="\CFC\<%=strSourceTable %>DAO" method="Create" <%=strSourceTable %>="#<%=strSourceTable %>Obj#" returnvariable="<%= SourceTable.Columns[0].Name %>">
			<cfif <%= SourceTable.Columns[0].Name %> EQ 0>
				<cfset response.success = FALSE />
				<cfset response.error   = "Could not save <%=strSourceTable %>" />
				 <cfreturn SerializeJSON(response) />
			</cfif>

			<!--- Return the JSON encoded result --->
			<cfreturn SerializeJSON(response)>

			<!--- ---------------------------------------------------------------------------
				Return ERROR from cfcatch
			---------------------------------------------------------------------------- --->
			<cfcatch>
				<cfset response.message = CFCATCH.Message />
				<cfset response.detail  = CFCATCH.Detail />
				 <cfreturn SerializeJSON(response) />
			</cfcatch>
		</cftry>
	</cffunction>
	</cffunction>


	<cffunction	name="<%= strSourceTable %>"
		access="REMOTE"
		description="<%= strSourceTable %> Update"
		consumes="text/plain"
		produces="application/json"
		returnType="String"
		returnFormat="JSON"
		restPath="/"
		httpmethod="PUT">

	<% foreach (ColumnSchema column in this.SourceTable.Columns) {  %>
		<% if ( column.ExtendedProperties.Contains("CS_IsComputed") && column.ExtendedProperties["CS_IsComputed"].Value.ToString().ToLower() == "true") continue;  %>
		<% if ( column.ExtendedProperties.Contains("CS_IsIdentity") && column.ExtendedProperties["CS_IsIdentity"].Value.ToString().ToLower() == "true") continue; %>   
		<% if (column.Name == "AccountID") continue; %>
		<% if (column.Name == "ClubID") continue; %>
		<% if (column.Name == "dFlag") continue; %>
		<% if (column.Name == "Modified_By") continue; %>
		<% if (column.Name == "Modified_Tmstmp") continue; %>
		<% if (column.Name == "Created_By") continue; %>
		<% if (column.Name == "Created_Tmstmp") continue; %>
		<% if (column.Name == "UUID"				 || column.Name == "CRMViewDate"				 || column.Name == "CRMStatusID" 				|| column.Name == "CRMTracking" 				 || column.Name == "RIUpdate" 				  || column.Name == "RIUpdateDate" 				   || column.Name == "VerifiedDate" 				 || column.Name == "VerifiedBy"					|| column.Name == "VerifiedBy" || column.Name == "InfoVerified" || column.Name == "Website" || column.Name == "Expertise"  || column.Name == "YPPApplied" || column.Name == "YPPGoodUntil" || column.Name == "TollFreeNumber") { %>
			<% continue; %>
		<% } %>
		<cfargument name="<%= column.Name %>"<%= CFTabName( column.Name ) %>required="FALSE"	type="<%= CFType(column) %>"	restArgSource="QUERY"	default="<%= cfcInitDefault(column) %>	Hint="<%= column.Name %>"/>
	<% } %>

		<cftry>
			<!--- ---------------------------------------------------------------------------
				 Get the API key from the request header
			---------------------------------------------------------------------------- --->
			<cftry>
				<cfset api_key = GetHttpRequestData().Headers["x-apim-api-key"]>
				<cfcatch>
					<cfset response.status = false />
					<cfset response.message = "API Key Missing" />
					<cfreturn SerializeJSON(response) />
				</cfcatch>
			</cftry>

			<!--- ---------------------------------------------------------------------------
				 Lookup the account, club and active flag for this API key
			---------------------------------------------------------------------------- --->
			<cfinvoke component="\#APPLICATION.DIR#\CFC\APIKeyDAO"	method="Get"	APIKey="#api_key#" returnVariable="KeyInfo" />
			<!--- Get the account and club from the database for this API key --->
			<cfset AccountID    = KeyInfo.Account />
			<cfset ClubID       = KeyInfo.Club />
			
			<cfset logObj = CreateObject("component", "\#APPLICATION.DIR#\CFC\Utilities") />
			<cfset log = logObj.XLog(Table="<%= strSourceTable %>", type="A", Value="#ARGUMENTS.EngagementID#", Desc="PUT D-#AccountID# C-#ClubID#")>

			<!--- ---------------------------------------------------------------------------
				Do All the Core Method Work Here
			---------------------------------------------------------------------------- --->
			<!--- Update the <%=strSourceTable %> with changes from the FORM --->
			<cfinvoke component="\CFC\<%=strSourceTable %>" method="init" ArgumentCollection="#FORM#"  returnvariable="<%=strSourceTable %>Obj" /> 
			<cfinvoke component="\CFC\<%=strSourceTable %>DAO" method="Update" <%=strSourceTable %>="#<%=strSourceTable %>Obj#" returnvariable="<%= SourceTable.Columns[0].Name %>">
			<cfif <%= SourceTable.Columns[0].Name %> EQ 0>
				<cfset response.success = FALSE />
				<cfset response.error   = "Could not save <%=strSourceTable %>" />
				 <cfreturn SerializeJSON(response) />
			</cfif>

			<!--- Return the JSON encoded result --->
			<cfreturn SerializeJSON(response)>

			<!--- ---------------------------------------------------------------------------
				Return ERROR from cfcatch
			---------------------------------------------------------------------------- --->
			<cfcatch>
				<cfset response.message = CFCATCH.Message />
				<cfset response.detail  = CFCATCH.Detail />
				 <cfreturn SerializeJSON(response) />
			</cfcatch>
		</cftry>
	</cffunction>

	<cffunction	name="<%= strSourceTable %>"
		access="REMOTE"
		description="<%= strSourceTable %> DELETE"
		consumes="text/plain"
		produces="application/json"
		returnType="String"
		returnFormat="JSON"
		restPath="/"
		httpmethod="DELETE">

	<% foreach (ColumnSchema column in this.SourceTable.Columns) {  %>
		<% if ( column.ExtendedProperties.Contains("CS_IsComputed") && column.ExtendedProperties["CS_IsComputed"].Value.ToString().ToLower() == "true") continue;  %>
		<% if ( column.ExtendedProperties.Contains("CS_IsIdentity") && column.ExtendedProperties["CS_IsIdentity"].Value.ToString().ToLower() == "true") continue; %>   
		<% if (column.Name == "AccountID") continue; %>
		<% if (column.Name == "ClubID") continue; %>
		<% if (column.Name == "dFlag") continue; %>
		<% if (column.Name == "Modified_By") continue; %>
		<% if (column.Name == "Modified_Tmstmp") continue; %>
		<% if (column.Name == "Created_By") continue; %>
		<% if (column.Name == "Created_Tmstmp") continue; %>
		<% if (column.Name == "UUID"				 || column.Name == "CRMViewDate"				 || column.Name == "CRMStatusID" 				|| column.Name == "CRMTracking" 				 || column.Name == "RIUpdate" 				  || column.Name == "RIUpdateDate" 				   || column.Name == "VerifiedDate" 				 || column.Name == "VerifiedBy"					|| column.Name == "VerifiedBy" || column.Name == "InfoVerified" || column.Name == "Website" || column.Name == "Expertise"  || column.Name == "YPPApplied" || column.Name == "YPPGoodUntil" || column.Name == "TollFreeNumber") { %>
			<% continue; %>
		<% } %>
		<cfargument name="<%= column.Name %>"<%= CFTabName( column.Name ) %>required="FALSE"	type="<%= CFType(column) %>"	restArgSource="QUERY"	default="<%= cfcInitDefault(column) %>	Hint="<%= column.Name %>"/>
	<% } %>

		<cftry>
			<!--- ---------------------------------------------------------------------------
				 Get the API key from the request header
			---------------------------------------------------------------------------- --->
			<cftry>
				<cfset api_key = GetHttpRequestData().Headers["x-apim-api-key"]>
				<cfcatch>
					<cfset response.status = false />
					<cfset response.message = "API Key Missing" />
					<cfreturn SerializeJSON(response) />
				</cfcatch>
			</cftry>

			<!--- ---------------------------------------------------------------------------
				 Lookup the account, club and active flag for this API key
			---------------------------------------------------------------------------- --->
			<cfinvoke component="\#APPLICATION.DIR#\CFC\APIKeyDAO"	method="Get"	APIKey="#api_key#" returnVariable="KeyInfo" />
			<!--- Get the account and club from the database for this API key --->
			<cfset AccountID    = KeyInfo.Account />
			<cfset ClubID       = KeyInfo.Club />
			
			<cfset logObj = CreateObject("component", "\#APPLICATION.DIR#\CFC\Utilities") />
			<cfset log = logObj.XLog(Table="<%= strSourceTable %>", type="A", Value="#ARGUMENTS.EngagementID#", Desc="DELETE D-#AccountID# C-#ClubID#")>

			<!--- ---------------------------------------------------------------------------
				Do All the Core Method Work Here
			---------------------------------------------------------------------------- --->
			<cfinvoke component="\CFC\EngagementDAO" method="DeleteLogical" <% =SourceTable.Columns[0].Name %>="#<% =SourceTable.Columns[0].Name %>#" returnvariable="RC">
			<cfif NOT RC>
				<cfset response.success = FALSE />
				<cfset response.error   = "Could not delete <%= strSourceTable %>" />
			</cfif>

			<!--- Return the JSON encoded result --->
			<cfreturn SerializeJSON(response)>

			<!--- ---------------------------------------------------------------------------
				Return ERROR from cfcatch
			---------------------------------------------------------------------------- --->
			<cfcatch>
				<cfset response.message = CFCATCH.Message />
				<cfset response.detail  = CFCATCH.Detail />
				 <cfreturn SerializeJSON(response) />
			</cfcatch>
		</cftry>
	</cffunction>

</cfcomponent>