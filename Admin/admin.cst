<%@ CodeTemplate Language="C#" TargetLanguage="CFC" Debug="False" Description="Template description here." %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="Context" Description="Table that the object is based on." %>
<%@ Map Name="CSharpAlias" Src="System-CSharpAlias" Description="System to C# Type Map" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="System.Design" %>
<%@ Import Namespace="SchemaExplorer" %>
<script runat="template">
<!-- #include file="../scripts/CFType.cs" -->
<!-- #include file="../scripts/cfcInitDefault.cs" -->
<!-- #include file="../scripts/SplitCamelCase.cs" -->
public override string GetFileName() {
	string strSourceTable = SourceTable.Name;
	if (strSourceTable.Length > 3 && strSourceTable.Substring(0, 3) == "tbl") { 
		 strSourceTable = strSourceTable.Substring(3);
	} 
	if (strSourceTable.Length > 3 && strSourceTable.Substring(0, 3) == "GL_") { 
		 strSourceTable = strSourceTable.Substring(3);
	} 
	return "Admin.cfm";
}
</script>
<% 
bool fAccountID = false;
bool fdFlag 	= false;
bool fIsActive 	= false;
bool fOrgYear 	= false;
string strSourceTable = SourceTable.Name;
if (strSourceTable.Length > 3 && strSourceTable.Substring(0, 3) == "tbl") { 
	 strSourceTable = strSourceTable.Substring(3);
} 
if (strSourceTable.Length > 3 && strSourceTable.Substring(0, 3) == "GL_") { 
	 strSourceTable = strSourceTable.Substring(3);
}
if (strSourceTable.Length > 3 && strSourceTable.Substring(0, 3) == "RLI") { 
	 strSourceTable = strSourceTable.Substring(3);
} 
int col = 0;
foreach (ColumnSchema column in this.SourceTable.Columns) {  
	if (column.Name == "AccountID") { 
		fAccountID = true;
	}
	if (column.Name == "dFlag") { 
		fdFlag = true;
	} 
	if (column.Name == "IsActive") { 
		fIsActive = true;
	} 
	if (column.Name == "OrgYear") { 
		fOrgYear = true;
	} 
} 
%>
<!--------------------------------------------------------------------------------------
	Copyright(c) 2003-2020 DACdb, LLC.
	<%= strSourceTable %>.cfm - 

	Modifications:
		<%= DateTime.Now.ToShortDateString() %> - Created
----------------------------------------------------------------------------------- --->
<cfsetting showdebugoutput="No">

<!---
<cfinclude template="/cfscript/profile.cfm">
<div style="margin-left: 200px">
<cfdump var="#Form#">
<cfdump var="#URL#">
</div> --->

<cftry>
	<cfparam name="AccountID" 				default="#SESSION.AccountID#"					type="numeric">
	<cfparam name="ClubID" 					default="#SESSION.ClubID#"						type="numeric">
	<cfparam name="UserID" 					default="#SESSION.UserID#"						type="numeric">

	<cfparam name="Action" 					default="V"										type="string">
	<cfparam name="strMsg"					default=""										type="string">

	<cfparam name="Filter" 					default=""										type="string">
	<cfparam name="StartRow" 				default="1"										type="numeric">
	<cfparam name="PageSize" 				default="250"									type="numeric">

	<cfcatch>
			Contact Support.<cfabort>
	</cfcatch>
</cftry>

<!-------------------------------------------------------------------------------------------------
	Setup
---------------------------------------------------------------------------------------------------->
<cfset start_tick	= GetTickCount()>

<!-------------------------------------------------------------------------------------------------
	Form Updates
---------------------------------------------------------------------------------------------------->
<cfif IsDefined("Form.Add")>
<% foreach (ColumnSchema column in this.SourceTable.Columns) {  %>
	<%  switch (column.Name.ToLower() )  %>
	<% { %>
		<% case "positionsort":	%>
		<% case "sequence":	%>
		<% case "modified_tmstmp":	%>
		<% case "modified_by":		%>
		<% case "created_tmstmp":	%>
		<% case "created_by":		%>
		<%		break;				%>
		<% default:%>
			<% if ( column.Name.Substring(0, 2) == "Is" ) { %>
	<cfif IsDefined("FORM.<%= column.Name %>")>		<cfset FORM.<%= column.Name %>		= Evaluate("FORM.<%= column.Name %>")>		<cfelse>	<cfset FORM.<%= column.Name %> = "N">	</cfif>
			<% } %>
			<% break; %>
		<% } %>
<% } %>

	<cfset <%= strSourceTable %>Obj = createObject("component", "\CFC\<%= strSourceTable %>").init( argumentCollection = FORM ) />
	<cfinvoke component="\CFC\<%= strSourceTable %>DAO" method="Create" <%= strSourceTable %>="#<%= strSourceTable %>Obj#" returnvariable="RC">
	<cfif RC EQ 0>
		<cfset strMsg = "Error adding this record">
	</cfif>

</cfif>

<cfif IsDefined("Form.Update")>
	<cfset Action = "E">
	<cfif IsDefined("LineItem")>
		<cfloop index="I" from="1" to="#ListLen(LineItem)#">
			<cfset N = ListGetAt(LineItem, I)>
			<cfif FORM["Chk_" & #N#] GT 0>

<% foreach (ColumnSchema column in this.SourceTable.Columns) {  %>
	<%  switch (column.Name.ToLower() )  %>
	<% { %>
		<% case "positionsort":	%>
		<% case "sequence":	%>
		<% case "modified_tmstmp":	%>
		<% case "modified_by":		%>
		<% case "created_tmstmp":	%>
		<% case "created_by":		%>
		<%		break;				%>
		<% default:%>
			<% if ( column.Name.Substring(0, 2) == "Is" ) { %>
				<cfif IsDefined("<%= column.Name %>_#N#")>		<cfset <%= column.Name %>  = FORM["<%= column.Name %>_" & #N#]>  	<cfelse> <cfset <%= column.Name %> = "N">  </cfif>
			<% } else { %>
				<cfset <%= column.Name %> 		= FORM["<%= column.Name %>_" & #N#]>
			<% } %>
			<% break; %>
		<% } %>
<% } %>

				<cfinvoke component="\CFC\<%= strSourceTable %>" method="init" returnvariable="<%= strSourceTable %>Obj">
<% foreach (ColumnSchema column in this.SourceTable.Columns) {  %>
	<%  switch (column.Name.ToLower() )  %>
	<% { %>
		<% case "positionsort":	%>
		<% case "sequence":	%>
		<% case "modified_tmstmp":	%>
		<% case "modified_by":		%>
		<% case "created_tmstmp":	%>
		<% case "created_by":		%>
		<%		break;				%>
		<% default:%>
					<cfinvokeargument name="<%= column.Name %>"				Value="#<%= column.Name %>#">
			<% break; %>
		<% } %>
<% } %>
				</cfinvoke>
				<cfinvoke component="\CFC\<%= strSourceTable %>DAO" method="Update" <%= strSourceTable %>="#<%= strSourceTable %>Obj#" returnvariable="RC">
			</cfif>
		</cfloop>
	</cfif>
	<cfset Action = "V">
</cfif>
<cfif IsDefined("Form.Delete")>
	<cfif structKeyExists(Form, "LineItem")>
		<cfloop index="I" from="1" to="#ListLen(LineItem)#">
			<cfset N = ListGetAt(LineItem, I)>
			<cfif IsDefined("Chk_#N#")>
				<cfset <%= SourceTable.Columns[0].Name %>	= FORM["<%= SourceTable.Columns[0].Name %>_" & #N#]>
				<cfset <%= strSourceTable %>Obj = createObject("component", "\CFC\<%= strSourceTable %>").init( <%= SourceTable.Columns[0].Name %> = <%= SourceTable.Columns[0].Name %> ) />
				<cfinvoke component="\CFC\<%= strSourceTable %>DAO" method="Delete" <%= strSourceTable %>="#<%= strSourceTable %>Obj#" returnvariable="RC">
			</cfif>
		</cfloop>
	</cfif>
	<cfset Action = "V">
</cfif>

<cfif IsDefined("Form.Cancel")>
	<cfset Action = "V">
</cfif>

<!-------------------------------------------------------------------------------------------------
	Display Page
---------------------------------------------------------------------------------------------------->
<cfset ModuleInc = "Validate,BS4,JS4,TableSort,TableSortWidgets">
<cf_StdHeader Menu="/Admin/Index_Menu.cfm" Legacy="TRUE" Include="#ModuleInc#">
	<!--- Add custom page styles here. --->
</cf_StdHeader>

<div class="content-wrapper">

	<cfoutput>
	<form id="form" name="form" action="Admin.cfm" method="post" onsubmit="return validate_form(this);">
		<input type="hidden"	name="AccountID"				value="#AccountID#"				id="AccountID">
		<input type="hidden"	name="ClubID"					value="#ClubID#"				id="ClubID">

		<!--- Content Header (Page header) and breadcrumb --->
		<section class="content noprint" style="padding: 8px 0 8px 0;">
			<div class="row">
				<div class="col-md-8">
					<h1 class="h1"><%= SplitCamelCase(strSourceTable) %> Admin <!--- <strong><cfif ClubID EQ 0>#SESSION.AccountLabel# <cfelse>#SESSION.ClubLabel# #SESSION.ClubName#</cfif> </strong>---></h1>
				</div>
				<div class="col-md-4">
					<button type="button" class="btn btn-light btn-sm	 	pull-right noprint" id="config" Title="Configure" 		Alt="Configure">		<i class="fal fa-cog fa-lg fa-sm"></i></button>
					<button type="button" class="btn btn-secondary btn-sm 	pull-right noprint" id="print" 	Title="Print" 			Alt="Print">			<i class="fal fa-print fa-lg fa-sm"></i></button>
				</div>
			</div>
		</section>

		<section class="content content-buttons noprint" style="border-bottom: 1px solid ##dcdcdc;">
			<div class="row">
				<div class="col-md-8 col-xs-12">
					Add, Edit or Delete <%= SplitCamelCase(strSourceTable) %>.<BR>
					Drag and Drop the <%= SplitCamelCase(strSourceTable) %> up or down on the list to sort.
				</div>	<!--- /col-md-8 col-xs-12 --->
				<div class="col-md-4 col-xs-12 text-right">

					<div class="btn-group noprint">

						<cfswitch expression="#Action#">
							<cfcase value="V">
								<button	type="button" class="btn btn-primary btn-sm   pull-right"	id="Delete">Delete</button>
								<button	type="button" class="btn btn-secondary btn-sm pull-right"	id="Edit">	Edit</button>
								<button	type="button" class="btn btn-danger btn-sm    pull-right"	id="Add">	Add</button>
							</cfcase>
							<cfcase value="A">
								<button	type="button" class="btn btn-danger btn-sm   pull-right"				id="Cancel">	Cancel</button>
								<button	type="submit" class="btn btn-success btn-sm  pull-right" Name="Add"	id="AddRec">	Add</button>
							</cfcase>
							<cfcase value="E">
								<button	type="button" class="btn btn-danger btn-sm   pull-right"				id="Cancel">	Cancel</button>
								<button	type="submit" class="btn btn-success btn-sm  pull-right" Name="Update"	id="UpdateRec">	Update</button>
							</cfcase>
							<cfcase value="D">
								<button	type="button" class="btn btn-danger btn-sm   pull-right"				id="Cancel">	Cancel</button>
								<button	type="submit" class="btn btn-success btn-sm  pull-right" Name="Delete"	id="DeleteRec">	Delete</button>
							</cfcase>
						</cfswitch>

					</div>	<!--- /btn-group --->
				</div>	<!--- /col-md-4 col-xs-12 text-right --->

				<!---	Validation Error --->
				<div align="center" class="error" style="display:none; margin-top: 10px; margin-bottom: 10px">
					<img src="/images/exclaim.gif" alt="Warning!" style="margin: 0px 5px 0px 10px;" />
					<span></span><br clear="all"/>
				</div>	<!--- /validation --->
			</div>	<!--- row ---->
		</section>

		<!-- Main content -->
		<section class="content">
			<div class="row">
				<div class="col-md-12">

<cfinvoke component="\CFC\<%= strSourceTable %>DAO" method="View" returnvariable="Q">
	<cfinvokeargument name="AccountID"				Value="#AccountID#">
	<cfinvokeargument name="Override"				Value="Y">
	<cfinvokeargument name="SortBy"					Value="Sequence">		<!--- Position Sort --->
</cfinvoke>

<cfswitch expression="#Action#">
	<cfcase value="A">  <cfinclude template="Add.cfm">   </cfcase>
	<cfcase value="V">  <cfinclude template="View.cfm">  </cfcase>
	<cfcase value="E">  <cfinclude template="Edit.cfm">  </cfcase>
	<cfcase value="D">  <cfinclude template="Del.cfm">   </cfcase>
</cfswitch>

				</div>	<!--- /col-md-12 --->
			</div>	<!--- /row --->
		</section>	<!--- /content --->

	</form>
	</cfoutput>
</div>	<!-- /.content-wrapper -->

<!-------------------------------------------------------------------------------------------------
	Popup DIVs
---------------------------------------------------------------------------------------------------->
<div id="hidecontain">
	<div id="programwrap" title="Setup">
		<form class="programform">
			No setup parameters are defined at this time.
		</form>
	</div>	<!--- /programwrap --->

	<div id="<%=strSourceTable %>Div" title="<%=strSourceTable %>">
	</div>
</div>	<!--- /hidecontain --->

<cf_StdFooter Include="#ModuleInc#">
<!-------------------------------------------------------------------------------------------------
	Local Javascript Functions
---------------------------------------------------------------------------------------------------->
<!--- <script type="text/javascript" src="js/<%=strSourceTable %>.js?<cfoutput>#Rand()#</cfoutput>" type="text/javascript"></script> --->
<script type="text/javascript">
var today = new Date();
var pagenum = 1;
var setTab= 0;
$(document).ready(function(){
//alert("ready");

	$.ajaxSetup ({
		cache: false
	});

	InitializePage();
});

function validate_form(f) {
	if ( $("#form").valid() ) {
		return true;
	}
	return false;
}

function InitializePage() {
	// alert("InitializePage");

	$("#form").validate({
	})

	$('tbody').sortable({
	 	opacity: 0.6,
		cursor: 'move',
		update: function() {
			var order = $(this).sortable('serialize',{key:'Q'});
			$.post("Sequence.cfm", order);
		}
	});

	$('#Save').on('click', function() {
		// add validation here
		$(this).attr("disabled", true);		// disable the button
		$(this).val("Sending...");		//change the button text
		$('#Submit').val( "Save");
		$('#form').submit();
	});

	$('#Add').on('click', function() {		
		// alert("Add");
		//<%=strSourceTable %>Dialog(0);
		window.location = 'Admin.cfm?Action=A';
	});

	$('#Edit').on('click', function() {		
		// alert("Edit");
		//<%=strSourceTable %>Dialog(id);
		window.location = 'Admin.cfm?Action=E';
	});

	$('#Delete').on('click', function() {
		//alert("Delete");
		window.location = 'Admin.cfm?Action=D';
	});

	$('#Cancel').on('click', function() {
		//alert("Cancel");
		window.location = 'Admin.cfm?Action=V';
	});
	
	RefreshTable();
}

function RefreshTable() {
//alert("RefreshTable");
	ReBind();
}

function ReBind() {

	$(".tablesorter").tablesorter({
		debug:false,
		theme: 'custom',
		widgets: ['zebra']
	});


	$( ".Date" ).datepicker({
		showOn: 'both',
		buttonImage : '/images/cal.gif',
		buttonText : 'Click Calendar',
		numberOfMonths: 1
	});

	$( "#CheckAll" ).on("click", function() {
		if (this.checked)
			$(".subinnercontentwrapper").children().find("input").attr('checked','checked');
		else
			$(".subinnercontentwrapper").children().find("input").removeAttr('checked');
	});

	$('.Checkit').on('click', function() {
		var tr = $(this).closest('tr');
		if ($(this).attr("id") == "On"){
			tr.find("input").attr('checked','checked');
		} else{
			tr.find("input").removeAttr('checked');
		}
		return false;
	});

/*
	$('.Edit').on('click', function() {		
		var id =  $(this).attr( "id" );
		// alert("Edit="+id);
		//<%=strSourceTable %>Dialog(id);
		window.location = '<%=strSourceTable %>Admin.cfm?Action=E';
	});
	
	$('.Delete').on('click', function() {
		var id = $(this).attr( "id" );
		// alert("Delete="+id);
		var tr = $(this).closest('tr');
		tr.fadeIn(800, function() {	// turn the select row red
			tr.addClass('deleterow');
		});
		if (!window.confirm("Please confirm - this will delete the selected <%=strSourceTable %>?")) {
			tr.fadeIn(800, function() {
				tr.removeClass('deleterow');
			});
			tr.removeClass('deleterow');
			alert("Not deleted!");
			return false;
		}
		$.ajax({
			type: "POST",
			url: "Action/<%=strSourceTable %>Delete.cfm?"+Math.random(),
			data: {
				<%= SourceTable.Columns[0].Name %>: id
			},
			success: function(data) {  
				tr.fadeOut(800, function() {
					tr.remove();
				});
				window.location = 'index.cfm';
			}
		});	
	});
*/
}
function checkRow(r) {
	eval("document.form.Chk_" + r + ".value = " + r);
}
</script>
</cf_StdFooter>
